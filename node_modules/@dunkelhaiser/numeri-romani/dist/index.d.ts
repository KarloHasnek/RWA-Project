type ArabicRoman = [number, string];
declare const romanNumerals: string[];
declare const romanize: (num: number) => string;
declare const romanizeSafe: (num: number) => string;
declare const arabicize: (num: string) => number;
declare const arabicizeSafe: (num: string) => number;
declare const isValidRoman: (num: string) => boolean;
declare const isValidRomanSafe: (num: string) => boolean;
declare const isValidArabic: (num: number) => boolean;
declare const isValidArabicSafe: (num: number) => boolean;

declare class RomanNumber {
    private value;
    private numericValue;
    constructor(value: number | string);
    getValue(): string;
    getNumericValue(): number;
    getValues(): {
        roman: string;
        arabic: number;
    };
    setValue(value: number | string): void;
    private checkResult;
    private calculateResult;
    add(value: number | string): this;
    subtract(value: number | string): this;
    multiply(value: number | string): this;
    divide(value: number | string): this;
    exponentiation(value: number | string): this;
}

export { type ArabicRoman, RomanNumber, arabicize, arabicizeSafe, isValidArabic, isValidArabicSafe, isValidRoman, isValidRomanSafe, romanNumerals, romanize, romanizeSafe };
